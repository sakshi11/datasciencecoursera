getwd()
setwd("C:/Users/sakshi.agrawal/Desktop/datasciencecoursera")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
submit()
submit()
submit()
submit()
submit()
submit()
?rm
complete <- function(directory,id=1:332) {
nm <- c("ID", "nobs")
df <- as.data.frame(matrix(nrow = 0, ncol = 2,dimnames = list(NULL, nm)))
filenames <- paste(sprintf("%03d", id), ".csv", sep="")
for (file in filenames){
nm <- c("ID", "nobs")
tempdf <- as.data.frame(matrix(nrow = 0, ncol = 2,dimnames = list(NULL, nm)))
tempdata <- read.csv(file)
lastrow <- tail(tempdata, 1)
rowcount <- nrow(na.omit(tempdata))
id <- lastrow$ID
tempdf <- cbind(ID=id, nobs=rowcount)
df <- rbind(df, tempdf)
rm(tempdata)
rm(rowcount)
rm(id)
rm(tempdf)
}
print(df)
}
complete("specdata", 8:10)
complete <- function(directory, id = 1:332) {
nobs <- numeric(0)
for(num in id)
{rep <- getmonitor (num , directory)
nobs <- c(nobs, nrow(na.omit(rep)))
}
data.with.id.and.nobs<-data.frame(id = id, nobs = nobs)
return(data.with.id.and.nobs)
}
complete("specdata", 8:11)
complete <- function(directory, id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory, summarize = FALSE) {
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
complete("specdata", 8:10)
source("submitscript1.R")
submit()
submit()
submit()
corr <- function(directory, threshold = 0) {
corrsNum <- numeric(0)
nobsDfr <- complete("specdata")
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
monDfr <- getmonitor(cid, directory)
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
return(corrsNum)
}
complete <- function(directory, id = 1:332) {
nobsNum <- numeric(0)
for (cid in id) {
cDfr <- getmonitor(cid, directory)
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory, summarize = FALSE)
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
rawDfr <- read.csv(fileStr)
if (summarize) {
print(summary(rawDfr))
}
return(rawDfr)
}
corr <- function(directory, threshold = 0) {
# --- Assert 'directory' is a character vector of length 1 indicating the
# location of the CSV files.  'threshold' is a numeric vector of length 1
# indicating the number of completely observed observations (on all
# variables) required to compute the correlation between nitrate and
# sulfate; the default is 0.  Return a numeric vector of correlations.
# --- Assert create an empty numeric vector
corrsNum <- numeric(0)
# --- Assert get a data frame as ID = 1:332
nobsDfr <- complete("specdata")
# --- Assert apply threshold
nobsDfr <- nobsDfr[nobsDfr$nobs > threshold, ]
for (cid in nobsDfr$id) {
# --- Assert get a data frame as ID in $id
monDfr <- getmonitor(cid, directory)
# --- Assert calculate correlation between $sulfate and $nitrate
corrsNum <- c(corrsNum, cor(monDfr$sulfate, monDfr$nitrate, use = "pairwise.complete.obs"))
}
# --- Assert return value is a numeric vector of correlations
return(corrsNum)
}
complete <- function(directory, id = 1:332) {
# --- Assert 'directory' is a character vector of length 1 indicating the
# location of the CSV files.  'id' is an integer vector indicating the
# monitor ID numbers to be used Return a data frame of the form: id nobs 1
# 117 2 1041 ...  where 'id' is the monitor ID number and 'nobs' is the
# number of complete cases
# --- Assert create an empty vector
nobsNum <- numeric(0)
for (cid in id) {
# --- Assert get data frame as ID
cDfr <- getmonitor(cid, directory)
# --- Assert count the number of complete cases and append to numeric
# vector
nobsNum <- c(nobsNum, nrow(na.omit(cDfr)))
}
# --- Assert return value is a data frame with TWO (2) columns
data.frame(id = id, nobs = nobsNum)
}
getmonitor <- function(id, directory, summarize = FALSE) {
# --- Assert 'id' is a vector of length 1 indicating the monitor ID
# number. The user can specify 'id' as either an integer, a character, or
# a numeric.  'directory' is a character vector of length 1 indicating the
# location of the CSV files 'summarize' is a logical indicating whether a
# summary of the data should be printed to the console; the default is
# FALSE
# --- Assert construct file name Directory is pre-appended to file name.
# Use sprintf() to add leading zeroes.  E.g. 'specdata/001.csv'
fileStr <- paste(directory, "/", sprintf("%03d", as.numeric(id)), ".csv",
sep = "")
# --- Assert read csv
rawDfr <- read.csv(fileStr)
# --- Assert summary if true
if (summarize) {
print(summary(rawDfr))
}
# --- Return value is a data frame
return(rawDfr)
}
source("submitscript1.R")
submit()
submit()
submit()
setwd("C:/Users/sakshi.agrawal/Documents")
library(datasets)
data(iris)
rm(list=ls())
library(datasets)
data(iris)
head(iris)
mean(iris$Sepal.Length, which(iris$Species=="virginica"))
mean(iris$Sepal.Length, iris[which(iris$Species=="virginica"), ])
subset <- iris[which(iris$Species == "virginica"), ]
mean(subset$Sepal.Length, na.rm = TRUE)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
head(mtcars)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429 - 82.63636
getwd()
setwd("C:/Users/sakshi.agrawal/Desktop/datasciencecoursera")
filenames <- sprintf("%03d.csv", id)
filenames <- sprintf("%03d.csv", 4)
filenames <- sprintf("%03d.csv", 10)
filenames <- sprintf("%03d.csv", 2:10)
filenames <- sprintf("%03d.csv", c(2,3,12))
filenames <- sprintf("%03d.csv", 112
)
?sprintf
a <- "string"
sprintf("This is where a %s goes.", a)
filenames <- paste("specdata", filenames, sep="/")
ldf <- lapply(filenames, read.csv)
ldf
head(ldf)
str(ldf)
df=do.call(rbind, ldf)
filenames <- paste(directory, filenames, sep="/")
filenames <- sprintf("%03d.csv", 2:4)
str(filename)
str(filenames)
filenames <- paste("specdata", filenames, sep="/")
ldf <- lapply(filenames, read.csv)
str(ldf)
df=do.call(rbind, ldf)
df[, "nitrate"]
df[c(2:4),"nitrate"]
df[6,"nitrate"]
x<-df[, "nitrate"]
